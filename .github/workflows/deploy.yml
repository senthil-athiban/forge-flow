name: CD Pipeline

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push client
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/client.Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/forgeflow-client:latest

      - name: Build and push server
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/server.Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/forgeflow-server:latest

      - name: Build and push webhooks
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/hooks.Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/forgeflow-webhooks:latest

      - name: Build and push processor
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/processor.Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/forgeflow-processor:latest

      - name: Build and push sweeper
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/sweeper.Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/forgeflow-sweeper:latest

      - name: Deploy to Azure VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          script: |
            cd /opt/forgeflow/docker
            echo "Pulling latest images..."
            docker-compose pull
            echo "Stopping existing containers..."
            docker-compose down --remove-orphans
            echo "Starting new containers..."
            docker-compose up -d
            echo "Cleaning up old images..."
            docker image prune -f
            echo "Deployment complete!"